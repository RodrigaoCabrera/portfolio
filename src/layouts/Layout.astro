---
import "@fontsource-variable/inter";

/* Components */
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";

interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="description"
      content="Personal portfolio, desarrollo web, web development, programming, programaciÃ³n"
    />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <Header />
    <slot />
    <Footer />
  </body>
</html>
<style is:global>
  :root {
    --primary-color: #f7fafc;
    --secondary-color: #4f7396;
    --success: #088738;
    --dark-color: #0d141c;
    --accent: #e8edf2;

    /* Fonts */
    --font-family: "Inter Variable", sans-serif;

    /* Fonts sizes */
    --h1: 600 22px/27px var(--font-family);
    --h2: 600 18px/22px var(--font-family);

    --xl-regular: 400 16px/24px var(--font-family);
    --xl-medium: 500 16px/24px var(--font-family);
    --xl-semibold: 600 16px/24px var(--font-family);
    --xl-bold: 700 16px/24px var(--font-family);

    --l-regular: 400 14px/21px var(--font-family);
    --l-medium: 500 14px/21px var(--font-family);
    --l-semibold: 600 14px/21px var(--font-family);
    --l-bold: 700 14px/21px var(--font-family);

    --m-regular: 400 12px/18px var(--font-family);
    --m-medium: 500 12px/18px var(--font-family);
    --m-semibold: 500 12px/18px var(--font-family);
    --m-bold: 700 12px/18px var(--font-family);

    --s-regular: 400 10px/16px var(--font-family);
    --s-medium: 500 10px/16px var(--font-family);
    --s-semibold: 600 10px/16px var(--font-family);
    --s-bold: 700 10px/16px var(--font-family);

    /* Layout */
    --border-radius: 12px;
    --secondary-border-radius: 8px;
  }

  html {
    font-family: var(--font-family);
    background: var(--primary-color);
    scroll-behavior: smooth;
  }
  body {
    padding: 0;
    margin: 0;
  }
</style>

<script>
  if (document.startViewTransition) {
    window.navigation.addEventListener("navigate", (event) => {
      const toUrl = new URL(event.destination.url);
      if (location.origin !== toUrl.origin) return;

      event.intercept({
        async handler() {
          const response = await fetch(toUrl.pathname);
          const text = await response.text();
          const [, data] = text.match(/<body[^>]*>([\s\S]*?)<\/body>/i);

          console.log(data);
          document.startViewTransition(() => {
            document.body.innerHTML = data;
            document.documentElement.scrollTop = 0;
          });
        },
      });
    });
  }
</script>
