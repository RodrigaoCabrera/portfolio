---
export const prerender = true;
/* Astro components */
import { Image } from "astro:assets";
import { fade } from "astro:transitions";

/* Components */
import Layout from "../layouts/Layout.astro";
import Badge from "../components/Badge.astro";
import SectionTitle from "../components/SectionTitle.astro";
import type { Project, Technology } from "../types/project";
import { getProjects } from "../libs/get-projects";

const STRAPI_URL = import.meta.env.STRAPI_URL;

export async function getStaticPaths() {
  const projects = await getProjects(
    "?populate[image][fields][0]=url&fields[0]=title&fields[1]=description&fields[2]=type&fields[3]=github_link&fields[4]=deploy_link&populate[technologies][fields][5]=name"
  );

  return projects.data.map(
    ({ id, title, image, type, github_link, deploy_link, technologies }) => {
      return {
        params: { id },
        props: { title, image, type, github_link, deploy_link, technologies },
      };
    }
  );
}

const { id } = Astro.params;
const { title, image, type, github_link, deploy_link, technologies }: Project =
  Astro.props;
const projectImage = `${STRAPI_URL}${image[1].url}` as string;
---

<Layout title="Proyectos" headerText="Proyectos">
  <section>
    <Image
      inferSize={true}
      src={projectImage}
      alt="Captura pantalla de página de destino"
      transition:name=`project-image-${id}`
    />
  </section>

  <main transition:animate={fade({ duration: ".6s" })}>
    <article>
      <SectionTitle title={title} isH1={true} />
      <Badge size="mini" text={type} />
      <p>
        Lorem ipsum dolor, sit amet consectetur adipisicing elit. Sapiente
        adipisci eaque, unde, dolor voluptatibus omnis optio ab inventore harum
        facilis possimus cumque ex animi porro nihil quae. Impedit, magni at.
      </p>
    </article>

    <section class="technologies">
      <SectionTitle title="Tecnologías" />
      <div>
        {
          technologies?.map((tecnology: Technology) => (
            <Badge text={tecnology.name} size="large" />
          ))
        }
      </div>
    </section>

    <section class="callToActionButtons">
      <a href={deploy_link} class="btn"
        ><span class="textButton">Ver Proyecto</span></a
      >
      <a class="outline btn" href={github_link}
        ><span class="textButton">Ver Código</span></a
      >
    </section>
  </main>
  <style>
    main {
      width: min(46rem, 100% - 32px);
      margin-inline: auto;
    }
    article,
    section.technologies,
    section.callToActionButtons {
      margin-top: 16px;
    }
    img {
      width: 100%;
      max-width: 46rem;
      margin-inline: auto;
      display: flex;
    }
    span.projectType {
      display: inline-block;
      padding: 3px 8px;
      background-color: var(--accent);
      border-radius: 5px;
      font: var(--s-medium);
      color: var(--dark-color);
      margin-bottom: 16px;
    }

    p {
      font: var(--xl-regular);
      color: var(--dark-color);
      margin: 16px 0 0;
    }

    .technologies div {
      display: flex;
      flex-wrap: wrap;
      gap: 5px;
    }

    section.callToActionButtons {
      display: flex;
      justify-content: stretch;
      gap: 10px;
      padding: 16px 0 32px;
    }

    a.btn {
      height: 40px;
      flex: 1;
      background-color: var(--accent);
      border: none;
      border-radius: var(--border-radius);
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 0 10px;
      text-decoration: none;
    }
    a.btn.outline {
      background-color: var(--primary-color);
      border: 1px solid var(--accent);
    }
    span.textButton {
      font: var(--l-bold);
      color: var(--dark-color);

      animation: hiden-text linear both;
      animation-timeline: scroll(root);
      animation-range: 270px 275px;
      transition: opacity 1s ease;
    }
  </style>
</Layout>
